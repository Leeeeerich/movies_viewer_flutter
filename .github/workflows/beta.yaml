name: beta_release
on:
  push:
    branches:
      - beta_release

jobs:

  test:
    #The type of machine to run the job on. [windows,macos, ubuntu , self-hosted]
    runs-on: macos-latest
    #sequence of tasks called
    steps:
      # The branch or tag ref that triggered the workflow will be checked out.
      # https://github.com/actions/checkout
      - uses: actions/checkout@master
      # Setup a flutter environment.
      # https://github.com/marketplace/actions/flutter-action
      - uses: subosito/flutter-action@master
        with:
          channel: 'dev'
      - run: flutter pub get
      # run static analys code
      - run: flutter analyze
      # run  flutter widgets tests  and unit tests
      - run: flutter test --coverage
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: coverage/lcov.info

  build_deploy:
    #if conditional to prevent a job from running
#    runs-on: macos-latest
    runs-on: ubuntu-latest
    #Identifies any jobs that must complete successfully before this job will run.
#    needs: [drive_ios,drive_android,test]
#    needs: [drive_android]
    needs: [test]
    name: Build apk and web
    steps:
      - uses: actions/checkout@master
      - uses: subosito/flutter-action@master
        with:
          channel: 'dev'
      # This action sets up a java environment
      # https://github.com/actions/setup-java
      - uses: actions/setup-java@master
        with:
          java-version: '12.x'
      #enable linux,macos,windows   and  web
      - run: flutter  config --enable-web
      - run: flutter  config --enable-linux-desktop
      - run: flutter  config --enable-macos-desktop
      - run: flutter  config --enable-windows-desktop
      - run: flutter build apk --debug
      # This action will create a github release and optionally upload an artifact to it.
      # https://github.com/Leeeeerich/movies_viewer_flutter/releases
      - name: Create a Release APK
        uses: marvinpinto/action-automatic-releases@latest
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          automatic_release_tag: latest
          prerelease: true
          title: Development Build
          files: build/app/outputs/apk/debug/*.apk
      - run: flutter build web
      # Handle the deploy process of your project to GitHub Pages.
      # SSH need for deploying to pages
      - name: Install SSH Client
        uses: webfactory/ssh-agent@master
        with:
          ssh-private-key: ${{ secrets.SSH_KEY }}
      - uses: JamesIves/github-pages-deploy-action@releases/v3
        with:
          SSH: true
          BRANCH: gh-pages
          FOLDER: web